/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dao

import anorm.{SQL, SqlParser}
import com.mlasaf.dto._
import java.util.Date


 class VExecutorInstanceStateDao extends DaoBase { 

  def getVExecutorInstanceStatesList() : List[VExecutorInstanceStateDto] = {
   implicit val connection = getConnection();
   val dtos : List[VExecutorInstanceStateDto]= SQL("select * from vExecutorInstanceState").as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);
   dtos
  }
  def getVExecutorInstanceStatesCount() : Long = {
   implicit val connection = getConnection();
   val cnt : Long = SQL("select count(*) as cnt from vExecutorInstanceState").executeQuery()(connection).as[Long](SqlParser.long("cnt").single)(connection);;
   cnt
  }
  def getVExecutorInstanceStatesLastInsertDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(insertedRowDate) as lastDate from vExecutorInstanceState").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastDate").single)(connection);;
   ld
  }
  def getVExecutorInstanceStatesLastUpdatedDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(lastUpdatedDate) as lastUpdatedDate from vExecutorInstanceState").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastUpdatedDate").single)(connection);;
   ld
  }
  def getVExecutorInstanceStateFirst() : VExecutorInstanceStateDto = {
   implicit val connection = getConnection();
   val dtos : VExecutorInstanceStateDto= SQL("select * from vExecutorInstanceState order by insertedRowDate asc ").as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*).head;
   dtos
  }
  def getVExecutorInstanceStateLast() : VExecutorInstanceStateDto = {
   implicit val connection = getConnection();
   val dtos : VExecutorInstanceStateDto= SQL("select * from vExecutorInstanceState order by insertedRowDate desc ").as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*).head;
   dtos
  }
  def getVExecutorInstanceStateByGuid(guid : Long) : VExecutorInstanceStateDto = {
   implicit val connection = getConnection();
   val dtos : VExecutorInstanceStateDto= SQL("select * from vExecutorInstanceState where guid = {guid} ").on("guid" -> guid).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].single);
   dtos
  }  
 def getDtosByExecutorInstanceStateId(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstanceStateId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByGuid(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByInsertedRowDate(colValue : java.util.Date) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByLastUpdatedDate(colValue : java.util.Date) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstanceId(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstanceId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByStateName(colValue : String) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where stateName = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_executorInstanceId(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_executorInstanceId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_guid(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_insertedRowDate(colValue : java.util.Date) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_lastUpdatedDate(colValue : java.util.Date) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_executorTypeId(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_executorTypeId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_executorHostId(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_executorHostId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_executorContextId(colValue : Long) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_executorContextId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_executorInstanceName(colValue : String) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_executorInstanceName = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_isRunning(colValue : Int) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_isRunning = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_isFinished(colValue : Int) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_isFinished = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_portNumber(colValue : Int) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_portNumber = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  
 def getDtosByExecutorInstance_endDate(colValue : java.util.Date) : List[VExecutorInstanceStateDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VExecutorInstanceStateDto] = SQL("select * from vExecutorInstanceState where executorInstance_endDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VExecutorInstanceStateDto].*);  
   dtos  
 }  

} 
