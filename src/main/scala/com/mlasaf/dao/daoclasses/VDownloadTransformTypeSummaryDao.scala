/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dao

import anorm.{SQL, SqlParser}
import com.mlasaf.dto._
import java.util.Date


 class VDownloadTransformTypeSummaryDao extends DaoBase { 

  def getVDownloadTransformTypeSummarysList() : List[VDownloadTransformTypeSummaryDto] = {
   implicit val connection = getConnection();
   val dtos : List[VDownloadTransformTypeSummaryDto]= SQL("select * from vDownloadTransformTypeSummary").as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);
   dtos
  }
  def getVDownloadTransformTypeSummarysCount() : Long = {
   implicit val connection = getConnection();
   val cnt : Long = SQL("select count(*) as cnt from vDownloadTransformTypeSummary").executeQuery()(connection).as[Long](SqlParser.long("cnt").single)(connection);;
   cnt
  }
  def getVDownloadTransformTypeSummarysLastInsertDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(insertedRowDate) as lastDate from vDownloadTransformTypeSummary").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastDate").single)(connection);;
   ld
  }
  def getVDownloadTransformTypeSummarysLastUpdatedDate() : java.util.Date = {
   implicit val connection = getConnection();
   val ld : java.util.Date = SQL("select max(lastUpdatedDate) as lastUpdatedDate from vDownloadTransformTypeSummary").executeQuery()(connection).as[java.util.Date](SqlParser.date("lastUpdatedDate").single)(connection);;
   ld
  }
  def getVDownloadTransformTypeSummaryFirst() : VDownloadTransformTypeSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformTypeSummaryDto= SQL("select * from vDownloadTransformTypeSummary order by insertedRowDate asc ").as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*).head;
   dtos
  }
  def getVDownloadTransformTypeSummaryLast() : VDownloadTransformTypeSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformTypeSummaryDto= SQL("select * from vDownloadTransformTypeSummary order by insertedRowDate desc ").as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*).head;
   dtos
  }
  def getVDownloadTransformTypeSummaryByGuid(guid : Long) : VDownloadTransformTypeSummaryDto = {
   implicit val connection = getConnection();
   val dtos : VDownloadTransformTypeSummaryDto= SQL("select * from vDownloadTransformTypeSummary where guid = {guid} ").on("guid" -> guid).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].single);
   dtos
  }  
 def getDtosByDownloadTransformTypeId(colValue : Long) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where downloadTransformTypeId = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  
 def getDtosByGuid(colValue : Long) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where guid = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  
 def getDtosByInsertedRowDate(colValue : java.util.Date) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where insertedRowDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  
 def getDtosByLastUpdatedDate(colValue : java.util.Date) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where lastUpdatedDate = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  
 def getDtosByDownloadTransformTypeName(colValue : String) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where downloadTransformTypeName = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  
 def getDtosByDownloadTransform_count(colValue : Int) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where downloadTransform_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  
 def getDtosByDownloadTransformColumn_count(colValue : Int) : List[VDownloadTransformTypeSummaryDto] = { 
   implicit val connection = getConnection();  
   val dtos : List[VDownloadTransformTypeSummaryDto] = SQL("select * from vDownloadTransformTypeSummary where downloadTransformColumn_count = {colValue} ").on("colValue" -> colValue).as(anorm.Macro.namedParser[VDownloadTransformTypeSummaryDto].*);  
   dtos  
 }  

} 
