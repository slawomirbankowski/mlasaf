package com.mlasaf.dto

import com.lucidchart.relate._

trait BaseDto {
  val dtoGuid : String = "" + com.mlasaf.common.CustomUtils.randomLong();
  val dtoInsertedDate = new java.util.Date();
  var fields : String = "";
  var pkFields : String = "";
  var fkFields : String = "";
}

case class AlgorithmColumnTypeDto ( val algorithmColumnTypeId : Long, val algorithmColumnTypeName : String, val algorithmColumnTypeDescription : String ) extends BaseDto { fields = "algorithmColumnTypeId,algorithmColumnTypeName,algorithmColumnTypeDescription"; pkFields = "algorithmColumnTypeId"; fkFields = "" }
case class AlgorithmImplementationDto ( val algorithmImplementationId : Long, val algorithmTypeVersionId : Long, val executorTypeId : Long, val algorithmImplementationName : String, val algorithmImplementationClass : String ) extends BaseDto { fields = "algorithmImplementationId,algorithmTypeVersionId,executorTypeId,algorithmImplementationName,algorithmImplementationClass"; pkFields = "algorithmImplementationId"; fkFields = "algorithmTypeVersionId,executorTypeId" }
case class AlgorithmOutputDto ( val algorithmOutputId : Long, val algorithmRunId : Long, val algorithmOutputTypeId : Long, val executorStorageViewId : Long, val outputPath : String ) extends BaseDto { fields = "algorithmOutputId,algorithmRunId,algorithmOutputTypeId,executorStorageViewId,outputPath"; pkFields = "algorithmOutputId"; fkFields = "" }
case class AlgorithmOutputTypeDto ( val algorithmOutputTypeId : Long, val algorithmOutputTypeName : String ) extends BaseDto { fields = "algorithmOutputTypeId,algorithmOutputTypeName"; pkFields = "algorithmOutputTypeId"; fkFields = "" }
case class AlgorithmParamDto ( val algorithmParamId : Long, val algorithmParamName : String, val algorithmParamDescription : String, val algorithmParamType : String ) extends BaseDto { fields = "algorithmParamId,algorithmParamName,algorithmParamDescription,algorithmParamType"; pkFields = "algorithmParamId"; fkFields = "" }
case class AlgorithmParamTypeDto ( val algorithmParamId : Long, val algorithmTypeId : Long, val algorithmTypeVersionId : Long ) extends BaseDto { fields = "algorithmParamId,algorithmTypeId,algorithmTypeVersionId"; pkFields = ""; fkFields = "algorithmParamId,algorithmTypeId,algorithmTypeVersionId" }
case class AlgorithmRunDto ( val algorithmRunId : Long, val algorithmScheduleId : Long, val executorInstanceId : Long, val executorStorageId : Long, val algorithmRunName : String, val insertedRowDate : java.util.Date, val runDate : java.util.Date, val isRunning : Int, val isFinished : Int ) extends BaseDto { fields = "algorithmRunId,algorithmScheduleId,executorInstanceId,executorStorageId,algorithmRunName,insertedRowDate,runDate,isRunning,isFinished"; pkFields = "algorithmRunId"; fkFields = "algorithmScheduleId,executorInstanceId,executorStorageId" }
case class AlgorithmRunTypeDto ( val algorithmRunTypeId : Long, val algorithmRunTypeName : String, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmRunTypeId,algorithmRunTypeName,insertedRowDate"; pkFields = "algorithmRunTypeId"; fkFields = "" }
case class AlgorithmRunViewDto ( val algorithmRunViewId : Long, val algorithmRunId : Long, val executorStorageViewId : Long, val insertedRowDate : java.util.Date, val isDownloaded : Int ) extends BaseDto { fields = "algorithmRunViewId,algorithmRunId,executorStorageViewId,insertedRowDate,isDownloaded"; pkFields = "algorithmRunViewId"; fkFields = "algorithmRunId,executorStorageViewId" }
case class AlgorithmScheduleDto ( val algorithmScheduleId : Long, val algorithmImplementationId : Long, val algorithmScheduleTypeId : Long, val algorithmScheduleName : String, val isScheduled : Int, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmScheduleId,algorithmImplementationId,algorithmScheduleTypeId,algorithmScheduleName,isScheduled,insertedRowDate"; pkFields = "algorithmScheduleId"; fkFields = "algorithmImplementationId,algorithmScheduleTypeId" }
case class AlgorithmScheduleColumnDto ( val algorithmScheduleColumnId : Long, val algorithmScheduleId : Long, val algorithmColumnTypeId : Long, val algorithmScheduleViewId : Long, val sourceViewId : Long, val sourceViewColumnId : Long, val extendedProperties : String, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmScheduleColumnId,algorithmScheduleId,algorithmColumnTypeId,algorithmScheduleViewId,sourceViewId,sourceViewColumnId,extendedProperties,insertedRowDate"; pkFields = "algorithmScheduleColumnId"; fkFields = "algorithmColumnTypeId,algorithmScheduleId,algorithmScheduleViewId,sourceViewId,sourceViewColumnId" }
case class AlgorithmScheduleParamDto ( val algorithmScheduleParamId : Long, val algorithmScheduleId : Long, val algorithmParamId : Long, val algorithmParamValue : String, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmScheduleParamId,algorithmScheduleId,algorithmParamId,algorithmParamValue,insertedRowDate"; pkFields = "algorithmScheduleParamId"; fkFields = "algorithmParamId,algorithmScheduleId" }
case class AlgorithmScheduleTypeDto ( val algorithmScheduleTypeId : Long, val algorithmScheduleTypeName : String, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmScheduleTypeId,algorithmScheduleTypeName,insertedRowDate"; pkFields = "algorithmScheduleTypeId"; fkFields = "" }
case class AlgorithmScheduleViewDto ( val algorithmScheduleViewId : Long, val algorithmScheduleViewTypeId : Long, val algorithmScheduleId : Long, val sourceViewId : Long, val insertedRowDate : java.util.Date, val joinOnDefinition : String ) extends BaseDto { fields = "algorithmScheduleViewId,algorithmScheduleViewTypeId,algorithmScheduleId,sourceViewId,insertedRowDate,joinOnDefinition"; pkFields = "algorithmScheduleViewId"; fkFields = "algorithmScheduleId,algorithmScheduleViewTypeId,sourceViewId" }
case class AlgorithmScheduleViewTypeDto ( val algorithmScheduleViewTypeId : Long, val algorithmScheduleViewTypeName : String ) extends BaseDto { fields = "algorithmScheduleViewTypeId,algorithmScheduleViewTypeName"; pkFields = "algorithmScheduleViewTypeId"; fkFields = "" }
case class AlgorithmTypeDto ( val algorithmTypeId : Long, val algorithmTypeName : String, val algorithmTypeDescription : String, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmTypeId,algorithmTypeName,algorithmTypeDescription,insertedRowDate"; pkFields = "algorithmTypeId"; fkFields = "" }
case class AlgorithmTypeColumnTypeDto ( val algorithmTypeVersionId : Long, val algorithmColumnTypeId : Long, val allowMultiple : Int, val allowEmpty : Int ) extends BaseDto { fields = "algorithmTypeVersionId,algorithmColumnTypeId,allowMultiple,allowEmpty"; pkFields = ""; fkFields = "algorithmColumnTypeId,algorithmTypeVersionId" }
case class AlgorithmTypeOutputTypeDto ( val algorithmTypeOutputTypeId : Long, val algorithmTypeVersionId : Long, val algorithmOutputTypeId : Long, val isMandatory : Int, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmTypeOutputTypeId,algorithmTypeVersionId,algorithmOutputTypeId,isMandatory,insertedRowDate"; pkFields = "algorithmTypeOutputTypeId"; fkFields = "" }
case class AlgorithmTypeVersionDto ( val algorithmTypeVersionId : Long, val algorithmTypeId : Long, val algorithmTypeVersionName : String, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "algorithmTypeVersionId,algorithmTypeId,algorithmTypeVersionName,insertedRowDate"; pkFields = "algorithmTypeVersionId"; fkFields = "algorithmTypeId" }
case class ExecutorHostDto ( val executorHostId : Long, val insertedRowDate : java.util.Date, val hostName : String, val hostIp : String, val hostDomain : String, val hostOsType : String, val hostOsVersion : String, val isWorking : Int ) extends BaseDto { fields = "executorHostId,insertedRowDate,hostName,hostIp,hostDomain,hostOsType,hostOsVersion,isWorking"; pkFields = "executorHostId"; fkFields = "" }
case class ExecutorInstanceDto ( val executorInstanceId : Long, val executorTypeId : Long, val executorHostId : Long, val executorInstanceName : String, val isRunning : Int, val isFinished : Int, val portNumber : Int, val insertedRowDate : java.util.Date, val guid : Long, val endDate : java.util.Date ) extends BaseDto { fields = "executorInstanceId,executorTypeId,executorHostId,executorInstanceName,isRunning,isFinished,portNumber,insertedRowDate,guid,endDate"; pkFields = "executorInstanceId"; fkFields = "executorHostId,executorTypeId" }
case class ExecutorRestDto ( val executorRestId : Long, val executorHostId : Long, val restPort : Int, val restVersion : String, val restStatus : String ) extends BaseDto { fields = "executorRestId,executorHostId,restPort,restVersion,restStatus"; pkFields = "executorRestId"; fkFields = "executorHostId" }
case class ExecutorRestCallDto ( val executorRestCallId : Long, val executorHostId : Long, val executorRestId : Long, val requestMethod : String, val requestHeader : String, val requestBody : String, val responseBody : String ) extends BaseDto { fields = "executorRestCallId,executorHostId,executorRestId,requestMethod,requestHeader,requestBody,responseBody"; pkFields = "executorRestCallId"; fkFields = "executorHostId,executorRestId" }
case class ExecutorStorageDto ( val executorStorageId : Long, val executorHostId : Long, val executorStorageTypeId : Long, val storageDefinition : String, val storageBasePath : String, val storageFulllPath : String, val isRunning : Int, val portNumber : Int, val insertedRowDate : java.util.Date, val guid : Long ) extends BaseDto { fields = "executorStorageId,executorHostId,executorStorageTypeId,storageDefinition,storageBasePath,storageFulllPath,isRunning,portNumber,insertedRowDate,guid"; pkFields = "executorStorageId"; fkFields = "executorStorageTypeId,executorHostId" }
case class ExecutorStorageSnapshotDto ( val executorStorageSnapshotId : Long, val executorInstanceId : Long, val insertedRowDate : java.util.Date ) extends BaseDto { fields = "executorStorageSnapshotId,executorInstanceId,insertedRowDate"; pkFields = "executorStorageSnapshotId"; fkFields = "executorInstanceId" }
case class ExecutorStorageTypeDto ( val executorStorageTypeId : Long, val executorStorageTypeName : String, val executorStorageTypeClass : String ) extends BaseDto { fields = "executorStorageTypeId,executorStorageTypeName,executorStorageTypeClass"; pkFields = "executorStorageTypeId"; fkFields = "" }
case class ExecutorStorageViewDto ( val executorStorageViewId : Long, val executorStorageSnapshotId : Long, val executorStorageId : Long, val sourceDownloadId : Long, val storagePath : String, val viewSize : Long, val viewRowsCount : Long ) extends BaseDto { fields = "executorStorageViewId,executorStorageSnapshotId,executorStorageId,sourceDownloadId,storagePath,viewSize,viewRowsCount"; pkFields = "executorStorageViewId"; fkFields = "executorStorageId" }
case class ExecutorTypeDto ( val executorTypeId : Long, val executorTypeName : String, val executorTypeClass : String ) extends BaseDto { fields = "executorTypeId,executorTypeName,executorTypeClass"; pkFields = "executorTypeId"; fkFields = "" }
case class ResourceManagerDto ( val resourceManagerId : Long, val resourceManagerTypeId : Long, val executorHostId : Long, val resourceManagerStatus : String ) extends BaseDto { fields = "resourceManagerId,resourceManagerTypeId,executorHostId,resourceManagerStatus"; pkFields = "resourceManagerId"; fkFields = "executorHostId,resourceManagerTypeId" }
case class ResourceManagerAllocationDto ( val resourceManagerAllocationId : Long, val resourceManagerTypeId : Long, val resourceManagerId : Long, val executorHostId : Long, val executorInstanceId : Long, val resourceMeasureId : Long, val allocationValue : Double, val allocationValueMin : Double, val allocationValueMax : Double ) extends BaseDto { fields = "resourceManagerAllocationId,resourceManagerTypeId,resourceManagerId,executorHostId,executorInstanceId,resourceMeasureId,allocationValue,allocationValueMin,allocationValueMax"; pkFields = "resourceManagerAllocationId"; fkFields = "" }
case class ResourceManagerCheckDto ( val resourceManagerCheckId : Long, val resourceManagerId : Long, val executorHostId : Long, val resourceManagerStatus : String ) extends BaseDto { fields = "resourceManagerCheckId,resourceManagerId,executorHostId,resourceManagerStatus"; pkFields = "resourceManagerCheckId"; fkFields = "" }
case class ResourceManagerMeasureDto ( val resourceManagerMeasureId : Long, val resourceManagerId : Long, val resourceMeasureId : Long, val measureString : String, val measureValue : Double ) extends BaseDto { fields = "resourceManagerMeasureId,resourceManagerId,resourceMeasureId,measureString,measureValue"; pkFields = "resourceManagerMeasureId"; fkFields = "resourceManagerId,resourceMeasureId" }
case class ResourceManagerTypeDto ( val resourceManagerTypeId : Long, val resourceManagerTypeName : String, val resourceManagerTypeClass : String ) extends BaseDto { fields = "resourceManagerTypeId,resourceManagerTypeName,resourceManagerTypeClass"; pkFields = "resourceManagerTypeId"; fkFields = "" }
case class ResourceMeasureDto ( val resourceMeasureId : Long, val resourceMeasureName : String ) extends BaseDto { fields = "resourceMeasureId,resourceMeasureName"; pkFields = "resourceMeasureId"; fkFields = "" }
case class SourceDownloadDto ( val sourceDownloadId : Long, val sourceScheduleId : Long, val insertedRowDate : java.util.Date, val lastUpdatedDate : java.util.Date, val retryNumber : Int, val isRunning : Int, val isFinished : Int, val isExcecption : Int, val excecptionDescription : String ) extends BaseDto { fields = "sourceDownloadId,sourceScheduleId,insertedRowDate,lastUpdatedDate,retryNumber,isRunning,isFinished,isExcecption,excecptionDescription"; pkFields = "sourceDownloadId"; fkFields = "sourceScheduleId" }
case class SourceDownloadStatDto ( val sourceDownloadStatId : Long, val sourceDownloadId : Long, val insertedRowDate : java.util.Date, val rowsCount : Long, val errorRowsCount : Long, val totalBytesCount : Long, val empryRowsCount : Long ) extends BaseDto { fields = "sourceDownloadStatId,sourceDownloadId,insertedRowDate,rowsCount,errorRowsCount,totalBytesCount,empryRowsCount"; pkFields = "sourceDownloadStatId"; fkFields = "sourceDownloadId" }
case class SourceDownloadStatColumnDto ( val sourceDownloadStatColumnId : Long, val sourceDownloadId : Long, val sourceViewColumnId : Long, val insertedRowDate : java.util.Date, val columnMinNumber : Double, val columnMaxNumber : Double, val columnMinStr : String, val columnMaxStr : String, val columnNonemptyCount : Long ) extends BaseDto { fields = "sourceDownloadStatColumnId,sourceDownloadId,sourceViewColumnId,insertedRowDate,columnMinNumber,columnMaxNumber,columnMinStr,columnMaxStr,columnNonemptyCount"; pkFields = "sourceDownloadStatColumnId"; fkFields = "sourceDownloadId,sourceViewColumnId" }
case class SourceInstanceDto ( val sourceInstanceId : Long, val sourceTypeId : Long, val sourceInstanceName : String, val errorCount : Long, val correctCount : Long, val lastStatus : String, val lastConnectionDate : java.util.Date ) extends BaseDto { fields = "sourceInstanceId,sourceTypeId,sourceInstanceName,errorCount,correctCount,lastStatus,lastConnectionDate"; pkFields = "sourceInstanceId"; fkFields = "sourceTypeId" }
case class SourceParamDto ( val sourceParamId : Long, val sourceParamName : String, val sourceParamType : String, val possibleValues : String ) extends BaseDto { fields = "sourceParamId,sourceParamName,sourceParamType,possibleValues"; pkFields = "sourceParamId"; fkFields = "" }
case class SourceParamValueDto ( val sourceInstanceId : Long, val sourceParamId : Long, val sourceParamValueId : Long, val sourceParamValueVersion : String, val insertedRowDate : java.util.Date, val paramValue : String ) extends BaseDto { fields = "sourceInstanceId,sourceParamId,sourceParamValueId,sourceParamValueVersion,insertedRowDate,paramValue"; pkFields = ""; fkFields = "sourceInstanceId,sourceParamId" }
case class SourceScheduleDto ( val sourceScheduleId : Long, val sourceViewId : Long, val executorStorageId : Long, val insertedRowDate : java.util.Date, val guid : Long, val onDemand : Int, val startTime : java.util.Date, val intervalValue : Long ) extends BaseDto { fields = "sourceScheduleId,sourceViewId,executorStorageId,insertedRowDate,guid,onDemand,startTime,intervalValue"; pkFields = "sourceScheduleId"; fkFields = "executorStorageId,sourceViewId" }
case class SourceTypeDto ( val sourceTypeId : Long, val sourceTypeName : String, val sourceTypeClass : String ) extends BaseDto { fields = "sourceTypeId,sourceTypeName,sourceTypeClass"; pkFields = "sourceTypeId"; fkFields = "" }
case class SourceTypeParamDto ( val sourceTypeId : Long, val sourceParamId : Long, val isRequired : Int ) extends BaseDto { fields = "sourceTypeId,sourceParamId,isRequired"; pkFields = ""; fkFields = "sourceParamId,sourceTypeId" }
case class SourceViewDto ( val sourceViewId : Long, val sourceInstanceId : Long, val sourceViewTypeId : Long, val sourceViewName : String, val sourceViewDefinition : String ) extends BaseDto { fields = "sourceViewId,sourceInstanceId,sourceViewTypeId,sourceViewName,sourceViewDefinition"; pkFields = "sourceViewId"; fkFields = "sourceInstanceId,sourceViewTypeId" }
case class SourceViewColumnDto ( val sourceViewColumnId : Long, val sourceViewId : Long, val insertedRowDate : java.util.Date, val guid : String, val columnName : String, val columnType : String ) extends BaseDto { fields = "sourceViewColumnId,sourceViewId,insertedRowDate,guid,columnName,columnType"; pkFields = "sourceViewColumnId"; fkFields = "sourceViewId" }
case class SourceViewTypeDto ( val sourceViewTypeId : Long, val sourceViewTypeName : String, val sourceViewTypeClass : String ) extends BaseDto { fields = "sourceViewTypeId,sourceViewTypeName,sourceViewTypeClass"; pkFields = "sourceViewTypeId"; fkFields = "" }


























