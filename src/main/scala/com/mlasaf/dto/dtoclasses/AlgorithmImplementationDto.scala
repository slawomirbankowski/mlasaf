/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class AlgorithmImplementationDto ( 
     val algorithmImplementationId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val algorithmTypeVersionId : Long
     , val executorTypeId : Long
     , val algorithmImplementationName : String
     , val algorithmImplementationClass : String 
     ) extends BaseDto {  
   def tableName : String = {    "algorithmImplementation";    }  
   def fields : String = {    "algorithmImplementationId,guid,insertedRowDate,lastUpdatedDate,algorithmTypeVersionId,executorTypeId,algorithmImplementationName,algorithmImplementationClass";    }  
   def pkFields : String = {    "algorithmImplementationId";    }  
   def fkFields : String = {    "algorithmTypeVersionId,executorTypeId";    }  
   def nameField : String = {    "algorithmImplementationName";    }  
 def getPk() : Long = {    algorithmImplementationId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(algorithmImplementationId,guid,insertedRowDate,lastUpdatedDate,algorithmTypeVersionId,executorTypeId,algorithmImplementationName,algorithmImplementationClass)  }  
 def toStringArray() : Array[String] = {    Array(""+algorithmImplementationId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+algorithmTypeVersionId,""+executorTypeId,""+algorithmImplementationName,""+algorithmImplementationClass)   }  
 def toFullString() : String = {    "algorithmImplementationId:'"+algorithmImplementationId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"algorithmTypeVersionId:'"+algorithmTypeVersionId+"'"+","+"executorTypeId:'"+executorTypeId+"'"+","+"algorithmImplementationName:'"+algorithmImplementationName+"'"+","+"algorithmImplementationClass:'"+algorithmImplementationClass+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "algorithmImplementationId" => algorithmImplementationId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "algorithmTypeVersionId" => algorithmTypeVersionId  
     case "executorTypeId" => executorTypeId  
     case "algorithmImplementationName" => algorithmImplementationName  
     case "algorithmImplementationClass" => algorithmImplementationClass   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "algorithmImplementationId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "algorithmTypeVersionId" => "Long"  
     case "executorTypeId" => "Long"  
     case "algorithmImplementationName" => "String"  
     case "algorithmImplementationClass" => "String"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into algorithmImplementation(guid,algorithmTypeVersionId,executorTypeId,algorithmImplementationName,algorithmImplementationClass) values (?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, algorithmTypeVersionId);
    stat.setObject(3, executorTypeId);
    stat.setObject(4, algorithmImplementationName);
    stat.setObject(5, algorithmImplementationClass);
    return stat; 
   } 
   def modify(algorithmTypeVersionId : Long, executorTypeId : Long, algorithmImplementationName : String, algorithmImplementationClass : String) : AlgorithmImplementationDto = {
    val dtoModified = new AlgorithmImplementationDto(this.algorithmImplementationId,this.guid,this.insertedRowDate,new java.util.Date(),algorithmTypeVersionId,executorTypeId,algorithmImplementationName,algorithmImplementationClass);
    dtoModified
  }
 } 
object AlgorithmImplementationDto { 
  val TABLE_NAME = "algorithmImplementation"; 
   val FIELD_algorithmImplementationId = "algorithmImplementationId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_algorithmTypeVersionId = "algorithmTypeVersionId";
   val FIELD_executorTypeId = "executorTypeId";
   val FIELD_algorithmImplementationName = "algorithmImplementationName";
   val FIELD_algorithmImplementationClass = "algorithmImplementationClass";

  def createNewAlgorithmImplementationDto(algorithmTypeVersionId : Long, executorTypeId : Long, algorithmImplementationName : String, algorithmImplementationClass : String) : AlgorithmImplementationDto = {  
     val dto = new AlgorithmImplementationDto(0,0,new java.util.Date(),new java.util.Date(),algorithmTypeVersionId,executorTypeId,algorithmImplementationName,algorithmImplementationClass)   
    dto 
  } 

}

 
