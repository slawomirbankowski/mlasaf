/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class ExecutorContextRuntimeDto ( 
     val executorContextRuntimeId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val executorHostId : Long
     , val executorContextId : Long
     , val availableProcessors : Double
     , val freeMemory : Double
     , val maxMemory : Double
     , val totalMemory : Double 
     ) extends BaseDto {  
   def tableName : String = { 
   "executorContextRuntime"; 
   }  
   def fields : String = { 
   "executorContextRuntimeId,guid,insertedRowDate,lastUpdatedDate,executorHostId,executorContextId,availableProcessors,freeMemory,maxMemory,totalMemory"; 
   }  
   def pkFields : String = { 
   "executorContextRuntimeId"; 
   }  
   def fkFields : String = { 
   "executorContextId,executorHostId"; 
   }  
   def nameField : String = { 
   ""; 
   }  
 def getPk() : Long = {
    executorContextRuntimeId
  }  
 def getInsertedRowDate() : java.util.Date = {
    insertedRowDate
  }  
 def getLastUpdatedDate() : java.util.Date = {
    lastUpdatedDate
  }  
 def getGuid() : Long = {
    guid
  }  
 def toAnyArray() : Array[Any] = {
    Array(executorContextRuntimeId,guid,insertedRowDate,lastUpdatedDate,executorHostId,executorContextId,availableProcessors,freeMemory,maxMemory,totalMemory)
  }  
 def toStringArray() : Array[String] = {
    Array(""+executorContextRuntimeId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+executorHostId,""+executorContextId,""+availableProcessors,""+freeMemory,""+maxMemory,""+totalMemory) 
  } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "executorContextRuntimeId" => executorContextRuntimeId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "executorHostId" => executorHostId  
     case "executorContextId" => executorContextId  
     case "availableProcessors" => availableProcessors  
     case "freeMemory" => freeMemory  
     case "maxMemory" => maxMemory  
     case "totalMemory" => totalMemory   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "executorContextRuntimeId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "executorHostId" => "Long"  
     case "executorContextId" => "Long"  
     case "availableProcessors" => "Double"  
     case "freeMemory" => "Double"  
     case "maxMemory" => "Double"  
     case "totalMemory" => "Double"   
    case _ => "Object" 
    } 
    ret 
  } 
   def prepareInsert(connection : java.sql.Connection) : java.sql.PreparedStatement = {
     val stat = connection.prepareStatement("insert into executorContextRuntime(guid,executorHostId,executorContextId,availableProcessors,freeMemory,maxMemory,totalMemory) values (?,?,?,?,?,?,?)", java.sql.Statement.RETURN_GENERATED_KEYS);
    stat.setObject(1, guid);
    stat.setObject(2, executorHostId);
    stat.setObject(3, executorContextId);
    stat.setObject(4, availableProcessors);
    stat.setObject(5, freeMemory);
    stat.setObject(6, maxMemory);
    stat.setObject(7, totalMemory);
    return stat; 
   } 
   def modify(executorHostId : Long, executorContextId : Long, availableProcessors : Double, freeMemory : Double, maxMemory : Double, totalMemory : Double) : ExecutorContextRuntimeDto = {
    val dtoModified = new ExecutorContextRuntimeDto(this.executorContextRuntimeId,this.guid,this.insertedRowDate,new java.util.Date(),executorHostId,executorContextId,availableProcessors,freeMemory,maxMemory,totalMemory);
    dtoModified
  }
 } 
object ExecutorContextRuntimeDto { 
  val TABLE_NAME = "executorContextRuntime"; 
   val FIELD_executorContextRuntimeId = "executorContextRuntimeId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_executorHostId = "executorHostId";
   val FIELD_executorContextId = "executorContextId";
   val FIELD_availableProcessors = "availableProcessors";
   val FIELD_freeMemory = "freeMemory";
   val FIELD_maxMemory = "maxMemory";
   val FIELD_totalMemory = "totalMemory";

  def createNewExecutorContextRuntimeDto(executorHostId : Long, executorContextId : Long, availableProcessors : Double, freeMemory : Double, maxMemory : Double, totalMemory : Double) : ExecutorContextRuntimeDto = {  
     val dto = new ExecutorContextRuntimeDto(0,0,new java.util.Date(),new java.util.Date(),executorHostId,executorContextId,availableProcessors,freeMemory,maxMemory,totalMemory)   
    dto 
  } 

}

 
