/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class VExecutorStorageSummaryDto ( 
     val executorStorageId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val executorHostId : Long
     , val executorStorageTypeId : Long
     , val storageDefinition : String
     , val storageBasePath : String
     , val storageFulllPath : String
     , val isRunning : Int
     , val portNumber : Int
     , val algorithmRun_count : Int
     , val sourceSchedule_count : Int
     , val executorStorageView_count : Int 
     ) extends BaseReadOnlyDto {  
   def tableName : String = { 
   "vExecutorStorageSummary"; 
   }  
   def fields : String = { 
   "executorStorageId,guid,insertedRowDate,lastUpdatedDate,executorHostId,executorStorageTypeId,storageDefinition,storageBasePath,storageFulllPath,isRunning,portNumber,algorithmRun_count,sourceSchedule_count,executorStorageView_count"; 
   }  
   def pkFields : String = { 
   ""; 
   }  
   def fkFields : String = { 
   ""; 
   }  
   def nameField : String = { 
   ""; 
   }  
 def getPk() : Long = {
    executorStorageId
  }  
 def getInsertedRowDate() : java.util.Date = {
    insertedRowDate
  }  
 def getLastUpdatedDate() : java.util.Date = {
    lastUpdatedDate
  }  
 def getGuid() : Long = {
    guid
  }  
 def toAnyArray() : Array[Any] = {
    Array(executorStorageId,guid,insertedRowDate,lastUpdatedDate,executorHostId,executorStorageTypeId,storageDefinition,storageBasePath,storageFulllPath,isRunning,portNumber,algorithmRun_count,sourceSchedule_count,executorStorageView_count)
  }  
 def toStringArray() : Array[String] = {
    Array(""+executorStorageId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+executorHostId,""+executorStorageTypeId,""+storageDefinition,""+storageBasePath,""+storageFulllPath,""+isRunning,""+portNumber,""+algorithmRun_count,""+sourceSchedule_count,""+executorStorageView_count) 
  } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "executorStorageId" => executorStorageId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "executorHostId" => executorHostId  
     case "executorStorageTypeId" => executorStorageTypeId  
     case "storageDefinition" => storageDefinition  
     case "storageBasePath" => storageBasePath  
     case "storageFulllPath" => storageFulllPath  
     case "isRunning" => isRunning  
     case "portNumber" => portNumber  
     case "algorithmRun_count" => algorithmRun_count  
     case "sourceSchedule_count" => sourceSchedule_count  
     case "executorStorageView_count" => executorStorageView_count   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "executorStorageId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "executorHostId" => "Long"  
     case "executorStorageTypeId" => "Long"  
     case "storageDefinition" => "String"  
     case "storageBasePath" => "String"  
     case "storageFulllPath" => "String"  
     case "isRunning" => "Int"  
     case "portNumber" => "Int"  
     case "algorithmRun_count" => "Int"  
     case "sourceSchedule_count" => "Int"  
     case "executorStorageView_count" => "Int"   
    case _ => "Object" 
    } 
    ret 
  } 
 } 
object VExecutorStorageSummaryDto { 
  val TABLE_NAME = "vExecutorStorageSummary"; 
   val FIELD_executorStorageId = "executorStorageId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_executorHostId = "executorHostId";
   val FIELD_executorStorageTypeId = "executorStorageTypeId";
   val FIELD_storageDefinition = "storageDefinition";
   val FIELD_storageBasePath = "storageBasePath";
   val FIELD_storageFulllPath = "storageFulllPath";
   val FIELD_isRunning = "isRunning";
   val FIELD_portNumber = "portNumber";
   val FIELD_algorithmRun_count = "algorithmRun_count";
   val FIELD_sourceSchedule_count = "sourceSchedule_count";
   val FIELD_executorStorageView_count = "executorStorageView_count";

}

 
