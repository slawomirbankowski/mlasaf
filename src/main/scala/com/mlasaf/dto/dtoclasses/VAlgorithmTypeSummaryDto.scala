/*
  Author(s): Slawomir Bankowski
  Project: mlasaf
  AUTOGENERATED CODE
*/
package com.mlasaf.dto 
 
 
case class VAlgorithmTypeSummaryDto ( 
     val algorithmTypeId : Long
     , val guid : Long
     , val insertedRowDate : java.util.Date
     , val lastUpdatedDate : java.util.Date
     , val algorithmTypeName : String
     , val algorithmTypeDescription : String
     , val algorithmTypeVersion_count : Int
     , val algorithmParamType_count : Int 
     ) extends BaseReadOnlyDto {  
   def tableName : String = {    "vAlgorithmTypeSummary";    }  
   def fields : String = {    "algorithmTypeId,guid,insertedRowDate,lastUpdatedDate,algorithmTypeName,algorithmTypeDescription,algorithmTypeVersion_count,algorithmParamType_count";    }  
   def pkFields : String = {    "";    }  
   def fkFields : String = {    "";    }  
   def nameField : String = {    "";    }  
 def getPk() : Long = {    algorithmTypeId  }  
 def getInsertedRowDate() : java.util.Date = {    insertedRowDate  }  
 def getLastUpdatedDate() : java.util.Date = {    lastUpdatedDate  }  
 def getGuid() : Long = {    guid  }  
 def toAnyArray() : Array[Any] = {    Array(algorithmTypeId,guid,insertedRowDate,lastUpdatedDate,algorithmTypeName,algorithmTypeDescription,algorithmTypeVersion_count,algorithmParamType_count)  }  
 def toStringArray() : Array[String] = {    Array(""+algorithmTypeId,""+guid,""+insertedRowDate,""+lastUpdatedDate,""+algorithmTypeName,""+algorithmTypeDescription,""+algorithmTypeVersion_count,""+algorithmParamType_count)   }  
 def toFullString() : String = {    "algorithmTypeId:'"+algorithmTypeId+"'"+","+"guid:'"+guid+"'"+","+"insertedRowDate:'"+insertedRowDate+"'"+","+"lastUpdatedDate:'"+lastUpdatedDate+"'"+","+"algorithmTypeName:'"+algorithmTypeName+"'"+","+"algorithmTypeDescription:'"+algorithmTypeDescription+"'"+","+"algorithmTypeVersion_count:'"+algorithmTypeVersion_count+"'"+","+"algorithmParamType_count:'"+algorithmParamType_count+"'"   } 
   def getFieldValue(name : String) : Any = { 
    val ret = name match { 
    case "algorithmTypeId" => algorithmTypeId  
     case "guid" => guid  
     case "insertedRowDate" => insertedRowDate  
     case "lastUpdatedDate" => lastUpdatedDate  
     case "algorithmTypeName" => algorithmTypeName  
     case "algorithmTypeDescription" => algorithmTypeDescription  
     case "algorithmTypeVersion_count" => algorithmTypeVersion_count  
     case "algorithmParamType_count" => algorithmParamType_count   
    case _ => null 
    } 
    ret 
  } 
   def getFieldTypeName(name : String) : String = { 
    val ret = name match { 
    case "algorithmTypeId" => "Long"  
     case "guid" => "Long"  
     case "insertedRowDate" => "java.util.Date"  
     case "lastUpdatedDate" => "java.util.Date"  
     case "algorithmTypeName" => "String"  
     case "algorithmTypeDescription" => "String"  
     case "algorithmTypeVersion_count" => "Int"  
     case "algorithmParamType_count" => "Int"   
    case _ => "Object" 
    } 
    ret 
  } 
 } 
object VAlgorithmTypeSummaryDto { 
  val TABLE_NAME = "vAlgorithmTypeSummary"; 
   val FIELD_algorithmTypeId = "algorithmTypeId";
   val FIELD_guid = "guid";
   val FIELD_insertedRowDate = "insertedRowDate";
   val FIELD_lastUpdatedDate = "lastUpdatedDate";
   val FIELD_algorithmTypeName = "algorithmTypeName";
   val FIELD_algorithmTypeDescription = "algorithmTypeDescription";
   val FIELD_algorithmTypeVersion_count = "algorithmTypeVersion_count";
   val FIELD_algorithmParamType_count = "algorithmParamType_count";

}

 
